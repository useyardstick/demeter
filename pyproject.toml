[project]
name = "demeter"
version = "0.0.1"
authors = [
  { name = "Yard Stick", email = "software@useyardstick.com" },
]
description = "Tools for fetching spatial datasets for agriculture"
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
  "boto3",
  "botocore",
  "dbfread",
  "defusedxml",
  "geopandas",
  "numpy",
  "pandas",
  "rtree",
  "pyproj",
  "rasterio ~= 1.4.3",
  "requests",
  "shapely",
  "smart-open",
]

[build-system]
requires = ["setuptools", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[tool.tox]
requires = ["tox"]
env_list = ["deepnote", "not_deepnote"]

[tool.tox.env_run_base]
base_python = ["3.9"]
commands = [["mypy", "."], ["pytest"]]
constrain_package_deps = true

[tool.tox.env.deepnote]
description = "Test using Deepnote dependency constraints"
deps = [
  "-c https://tk.deepnote.com/constraints3.9.txt",
  "-r requirements.dev.txt",
]

[tool.tox.env.not_deepnote]
description = "Test without Deepnote dependency constraints"
deps = [
  "-r requirements.dev.txt",
]

[tool.autoflake]
remove-all-unused-imports = true

[tool.isort]
profile = "black"

[tool.pytest.ini_options]
env_override_existing_values = 1
env_files = [".env.test"]

# https://docs.python.org/3/library/warnings.html#describing-warning-filters
filterwarnings = [
  "error", # Turn warnings into exceptions in tests
  "default::DeprecationWarning", # Log deprecation warnings, but don't error
  "ignore::rasterio.errors.NotGeoreferencedWarning", # Allow fake affine transforms in tests
]

[[tool.mypy.overrides]]
module = [
  "dbfread.*",
  "rasterio.*",
  "shapely.*",
  "smart_open.*",
]
follow_untyped_imports = true

[[tool.mypy.overrides]]
module = [
  "geopandas.*",
]
ignore_missing_imports = true

[[tool.pydoc-markdown.loaders]]
type = "python"
search_path = ["."]
modules = [
  "demeter.raster",
  "demeter.raster.polaris",
  "demeter.raster.slga",
  "demeter.raster.usgs.topography",
  "demeter.raster.usgs.hydrography",
  "demeter.raster.sentinel2.ndvi",
  "demeter.raster.utils.mask",
  "demeter.raster.utils.merge",
  "demeter.raster.utils.reprojection",
]

[tool.pydoc-markdown.renderer]
type = "markdown"
filename = "docs.md"
render_toc = true
